{
  "_args": [
    [
      {
        "raw": "stream-to-array@https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
        "scope": null,
        "escapedName": "stream-to-array",
        "name": "stream-to-array",
        "rawSpec": "https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
        "spec": "https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
        "type": "remote"
      },
      "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng"
    ]
  ],
  "_from": "stream-to-array@>=2.3.0 <3.0.0",
  "_id": "stream-to-array@2.3.0",
  "_inCache": true,
  "_location": "/metalsmith-optipng/stream-to-array",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stream-to-array@https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
    "scope": null,
    "escapedName": "stream-to-array",
    "name": "stream-to-array",
    "rawSpec": "https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
    "spec": "https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-optipng"
  ],
  "_resolved": "https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
  "_shasum": "bbf6b39f5f43ec30bc71babcb37557acecf34353",
  "_shrinkwrap": null,
  "_spec": "stream-to-array@https://registry.npmjs.org/stream-to-array/-/stream-to-array-2.3.0.tgz",
  "_where": "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "bugs": {
    "url": "https://github.com/stream-utils/stream-to-array/issues"
  },
  "dependencies": {
    "any-promise": "^1.1.0"
  },
  "description": "Concatenate a readable stream's data into a single array",
  "devDependencies": {
    "bluebird": "^3.1.1",
    "istanbul": "^0.4.2",
    "mocha": "^2.3.3"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/stream-utils/stream-to-array#readme",
  "keywords": [
    "stream",
    "streams",
    "buffer",
    "array",
    "concat"
  ],
  "license": "MIT",
  "name": "stream-to-array",
  "optionalDependencies": {},
  "readme": "# Stream to Array\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\nConcatenate a readable stream's data into a single array.\n\nYou may also be interested in:\n\n- [raw-body](https://github.com/stream-utils/raw-body) for strings\n\n## API\n\n```js\nvar toArray = require('stream-to-array')\n```\n\n### toArray([stream], [callback(err, arr)])\n\nReturns all the data objects in an array.\nThis is useful for streams in object mode if you want to just use an array.\n\n```js\nvar stream = new Stream.Readable()\ntoArray(stream, function (err, arr) {\n  assert.ok(Array.isArray(arr))\n})\n```\n\nIf `stream` is not defined, it is assumed that `this` is a stream.\n\n```js\nvar stream = new Stream.Readable()\nstream.toArray = toArray\nstream.toArray(function (err, arr) {\n\n})\n```\n\nIf `callback` is not defined, then it returns a promise.\n\n```js\ntoArray(stream)\n  .then(function (parts) {\n\n  })\n```\n\nIf you want to return a buffer, just use `Buffer.concat(arr)`\n\n```js\ntoArray(stream)\n  .then(function (parts) {\n    var buffers = []\n    for (var i = 0, l = parts.length; i < l ; ++i) {\n      var part = parts[i]\n      buffers.push((part instanceof Buffer) ? part : new Buffer(part))\n    }\n    return Buffer.concat(buffers)\n  })\n```\n\n[npm-image]: https://img.shields.io/npm/v/stream-to-array.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/stream-to-array\n[github-tag]: http://img.shields.io/github/tag/stream-utils/stream-to-array.svg?style=flat-square\n[github-url]: https://github.com/stream-utils/stream-to-array/tags\n[travis-image]: https://img.shields.io/travis/stream-utils/stream-to-array.svg?style=flat-square\n[travis-url]: https://travis-ci.org/stream-utils/stream-to-array\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/stream-to-array.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/stream-utils/stream-to-array?branch=master\n[david-image]: http://img.shields.io/david/stream-utils/stream-to-array.svg?style=flat-square\n[david-url]: https://david-dm.org/stream-utils/stream-to-array\n[license-image]: http://img.shields.io/npm/l/stream-to-array.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/stream-to-array.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/stream-to-array\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stream-utils/stream-to-array.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot"
  },
  "version": "2.3.0"
}
