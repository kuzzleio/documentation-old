{
  "_args": [
    [
      {
        "raw": "licenses@https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
        "scope": null,
        "escapedName": "licenses",
        "name": "licenses",
        "rawSpec": "https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
        "spec": "https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
        "type": "remote"
      },
      "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng"
    ]
  ],
  "_from": "licenses@>=0.0.0 <0.1.0",
  "_id": "licenses@0.0.20",
  "_inCache": true,
  "_location": "/metalsmith-optipng/licenses",
  "_phantomChildren": {},
  "_requested": {
    "raw": "licenses@https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
    "scope": null,
    "escapedName": "licenses",
    "name": "licenses",
    "rawSpec": "https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
    "spec": "https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-optipng",
    "/metalsmith-optipng/npm-registry"
  ],
  "_resolved": "https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
  "_shasum": "f18a57b26a78eaf28a873e2a378a33e81f59d136",
  "_shrinkwrap": null,
  "_spec": "licenses@https://registry.npmjs.org/licenses/-/licenses-0.0.20.tgz",
  "_where": "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/3rd-Eden/licenses/issues"
  },
  "dependencies": {
    "async": "0.6.x",
    "debug": "0.8.x",
    "fusing": "0.2.x",
    "githulk": "0.0.x",
    "npm-registry": "0.1.x"
  },
  "description": "A small tool that detects licensing information for a given Node.js module",
  "devDependencies": {
    "argh": "0.1.x",
    "chai": "1.9.x",
    "mocha": "1.18.x",
    "pre-commit": "0.0.x",
    "request": "2.34.x"
  },
  "homepage": "https://github.com/3rd-Eden/licenses#readme",
  "keywords": [
    "licenses",
    "licensing",
    "license",
    "legal",
    "MIT",
    "Open Source"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "licenses",
  "optionalDependencies": {},
  "readme": "# Licenses\n\n[![Build Status](https://travis-ci.org/3rd-Eden/licenses.png)](https://travis-ci.org/3rd-Eden/licenses)\n\nLicenses.. This is the most painful part about Open Source. There are so many\ndifferent licenses and they all have different restrictions. In order to know\nthe license footprint of your project you need to know how your modules are\nlicensed. You might be interested in your license footprint because:\n\n- Some licenses might restrict you from selling your code or using it for\n  commercial applications.\n- There are unlicensed modules released in to npm on a daily basis. Just\n  because they are added in the npm registry it doesn't mean that they are Open\n  Source and just free to use.\n- The code could be proprietary licensed.\n- .. and the list goes on and on.\n\nBut the biggest problem is figuring out which license a module is actually\nusing. There are a lot of ways of saying that your code is licensed under MIT.\nThere are people who rather say licensed under MIT than just stating MIT. So the\nway we write which license we use differ but also the location of our licenses.\nIt can be in the `package.json` hiding in various of properties or specified in\nthe `README.md` of the project or even a dedicated `LICENSE` file in the\nrepository.\n\nNow that you've taken the time to read about some of these issues above, you\nknow why this module exists. It tries to fulfill one simple task. Get a human\nreadable license from a given node module.\n\nHowever, this module isn't flawless as it tries to automate a task that usually\nrequires the interference and intelligence of a human. If you have module that\nis incorrectly detected or not detected at all but does have licensing\ninformation publicly available please create an issue about and we'll see if it\ncan get resolved.\n\n<!-- many thanks stranger <script>alert('thanks')</script> -->\n\n## Installation\n\nThe module is released through npm and can therefor be installed using:\n\n```\nnpm install --save licenses\n```\n\n## CLI\n\nThere is CLI version of this module available as `licensing` which can be\ninstalled locally using:\n\n```\nnpm install -g licensing\n```\n\nSee https://github.com/3rd-Eden/licensing for more information.\n\n## Getting started with the API\n\nThe module exposes one single interface for retrieving the packages, which is a\nsimple exported function:\n\n```js\n'use strict';\n\nvar licenses = require('licenses');\n\nlicenses('primus', function fetched(err, license) {\n  console.log(license.join(',')); // MIT\n});\n```\n\nAs you can see in the example above, the first argument of the function can be a\n`string` with the name of the package you want to resolve. In addition to\nsupplying a string you can also give it the contents of the npm registry's data\ndirectly:\n\n```js\nlicenses({ name: 'primus', readme: '..', ....}, function fetched(err, license) {\n\n});\n```\n\nThe function allows a second optional argument which allows you to configure\nlicense function. The following options are supported:\n\n- **githulk** A custom or pre-authorized\n  [githulk](https://github.com/3rd-Eden/githulk) instance. The license lookup\n  process makes extensive use of GitHub to retrieve license information that\n  might not be available in the package.json. But the GitHub API is rate limited\n  so if you don't use an authorized GitHulk instance you can only do 60 calls to\n  the API.\n- **order** The order in which we should attempt to resolve the license. This\n  defaults to [[registry](#registry), [github](#github), [content](#content)].\n- **registry** The URL of The npm Registry we should use to retrieve package\n  data.\n- *npmjs* a custom [npm-registry](https://github.com/3rd-Eden/npmjs) instance.\n\nThe options are completely optional and can therefore be safely omitted.\n\n```js\nlicenses('primus', { registry: 'https://registry.npmjs.org/' }, function () {\n\n});\n```\n\nAs you might have noticed from the options we support three different lookup\nalgorithms:\n\n### registry\n\nIn this algorithm we attempt to search for license information directly in the\nsupplied or retrieved npm data. This is the fastest lookup as it only needs to\nsearch and parse the `license` and `licenses` fields of the module for license\ninformation.\n\n### github\n\nThis reads out your github repository information from the package data to get a\ndirectly listing of your project. Once the directory is listed it fetches files\nfrom the repo where a possible license or license information can be found like\nREADME and LICENSE files. All the data that is found will be scanned with the\n[content](#content) algorithm.\n\n### content\n\nIt searches the readme or supplied content for matches the license files. If it\nfails to do any matching based on the license files it fallback to a really\nbasic regexp based check.\n\n### License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/3rd-Eden/licenses.git"
  },
  "scripts": {
    "test": "mocha $(find test -name '*.test.js')"
  },
  "version": "0.0.20"
}
