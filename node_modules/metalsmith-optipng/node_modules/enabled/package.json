{
  "_args": [
    [
      {
        "raw": "enabled@https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
        "scope": null,
        "escapedName": "enabled",
        "name": "enabled",
        "rawSpec": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
        "type": "remote"
      },
      "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng"
    ]
  ],
  "_from": "enabled@>=1.0.0 <1.1.0",
  "_id": "enabled@1.0.2",
  "_inCache": true,
  "_location": "/metalsmith-optipng/enabled",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enabled@https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
    "scope": null,
    "escapedName": "enabled",
    "name": "enabled",
    "rawSpec": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-optipng",
    "/metalsmith-optipng/diagnostics"
  ],
  "_resolved": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
  "_shasum": "965f6513d2c2d1c5f4652b64a2e3396467fc2f93",
  "_shrinkwrap": null,
  "_spec": "enabled@https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
  "_where": "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/bigpipe/enabled/issues"
  },
  "dependencies": {
    "env-variable": "0.0.x"
  },
  "description": "Check if a certain debug flag is enabled.",
  "devDependencies": {
    "assume": "1.3.x",
    "istanbul": "0.4.x",
    "mocha": "2.3.x",
    "pre-commit": "1.1.x"
  },
  "homepage": "https://github.com/bigpipe/enabled#readme",
  "keywords": [
    "enabled",
    "debug",
    "diagnostics",
    "flag",
    "env",
    "variable",
    "localstorage"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "enabled",
  "optionalDependencies": {},
  "readme": "# enabled\n\n[![From bigpipe.io][from]](http://bigpipe.io)[![Version npm][version]](http://browsenpm.org/package/enabled)[![Build Status][build]](https://travis-ci.org/bigpipe/enabled)[![Dependencies][david]](https://david-dm.org/bigpipe/enabled)[![Coverage Status][cover]](https://coveralls.io/r/bigpipe/enabled?branch=master)\n\n[from]: https://img.shields.io/badge/from-bigpipe.io-9d8dff.svg?style=flat-square\n[version]: http://img.shields.io/npm/v/enabled.svg?style=flat-square\n[build]: http://img.shields.io/travis/bigpipe/enabled/master.svg?style=flat-square\n[david]: https://img.shields.io/david/bigpipe/enabled.svg?style=flat-square\n[cover]: http://img.shields.io/coveralls/bigpipe/enabled/master.svg?style=flat-square\n\nEnabled is a small utility that can check if certain namespace are enabled by\nenvironment variables which are automatically transformed to regular expressions\nfor matching.\n\n## Installation\n\nThe module is release in the public npm registry and can be used in browsers and\nservers as it uses plain ol ES3 to make the magic work.\n\n```\nnpm install --save enabled\n```\n\n## Usage\n\nFirst of all make sure you've required the module using:\n\n```js\n'use strict';\n\nvar enabled = require('enabled');\n```\n\nThe returned `enabled` function accepts 2 arguments.\n\n1. `name` **string**, The namespace that should match.\n2. `variables` **array**, **optional**, Names of the `env` variable that it\n   should use for matching. If no argument is supplied it will default to\n   `diagnostics` and `debug`.\n\n#### Examples\n\n```js\nprocess.env.DEBUG = 'foo';\nenabled('foo') // true;\nenabled('bar') // false;\n\n// can use wildcards\nprocess.env.DEBUG = 'foob*';\n\nenabled('foobar') // true;\nenabled('barfoo') // false;\n\nprocess.env.DEBUG = 'foobar,-shizzle,nizzle';\n\nenabled('foobar') // true;\nenabled('shizzle-my-nizzle') // false;\nenabled('nizzle') // true;\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bigpipe/enabled.git"
  },
  "scripts": {
    "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
    "test": "mocha test.js",
    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
    "watch": "mocha --watch test.js"
  },
  "version": "1.0.2"
}
