{
  "_args": [
    [
      {
        "raw": "optipng@https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
        "scope": null,
        "escapedName": "optipng",
        "name": "optipng",
        "rawSpec": "https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
        "type": "remote"
      },
      "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng"
    ]
  ],
  "_from": "optipng@>=1.0.0 <2.0.0",
  "_id": "optipng@1.0.0",
  "_inCache": true,
  "_location": "/metalsmith-optipng/optipng",
  "_phantomChildren": {},
  "_requested": {
    "raw": "optipng@https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
    "scope": null,
    "escapedName": "optipng",
    "name": "optipng",
    "rawSpec": "https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-optipng"
  ],
  "_resolved": "https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
  "_shasum": "7cbeada509aa41af6c95e9037bc472e2122310c1",
  "_shrinkwrap": null,
  "_spec": "optipng@https://registry.npmjs.org/optipng/-/optipng-1.0.0.tgz",
  "_where": "/home/sstafyniak/src/poc-metalsmith/node_modules/metalsmith-optipng",
  "author": {
    "name": "Andreas Lind",
    "email": "andreas@one.com"
  },
  "bugs": {
    "url": "https://github.com/papandreou/node-optipng/issues"
  },
  "dependencies": {
    "gettemporaryfilepath": "0.0.1",
    "memoizeasync": "0.0.1",
    "optipng-bin": "3.0.2",
    "which": "1.0.5"
  },
  "description": "The optipng utility as a readable/writable stream",
  "devDependencies": {
    "coveralls": "2.11.2",
    "istanbul": "0.3.15",
    "jshint": "2.8.0",
    "mocha": "2.2.5",
    "sinon": "1.17.3",
    "unexpected": "10.11.0",
    "unexpected-sinon": "10.2.0",
    "unexpected-stream": "2.0.3"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/papandreou/node-optipng#readme",
  "keywords": [
    "optipng",
    "png",
    "image",
    "optimization",
    "stream",
    "filter",
    "read/write",
    "duplex"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/OptiPng.js",
  "name": "optipng",
  "optionalDependencies": {},
  "readme": "node-optipng\n============\n\n[![NPM version](https://badge.fury.io/js/optipng.svg)](http://badge.fury.io/js/optipng)\n[![Build Status](https://travis-ci.org/papandreou/node-optipng.svg?branch=master)](https://travis-ci.org/papandreou/node-optipng)\n[![Coverage Status](https://coveralls.io/repos/papandreou/node-optipng/badge.svg)](https://coveralls.io/r/papandreou/node-optipng)\n[![Dependency Status](https://david-dm.org/papandreou/node-optipng.svg)](https://david-dm.org/papandreou/node-optipng)\n\nThe optipng command line utility as a readable/writable stream. This\nis handy for situations where you don't want to worry about writing\nthe input to disc and reading the output afterwards.\n\nIf you don't have an `optipng` binary in your PATH, `node-optipng`\nwill try to use one of the binaries provided by <a\nhref=\"https://github.com/yeoman/node-optipng-bin\">the node-optipng-bin\npackage</a>.\n\nThe constructor optionally takes an array of command line options for\nthe `optipng` binary:\n\n```javascript\nvar OptiPng = require('optipng'),\n    myOptimizer = new OptiPng(['-o7']);\n\nsourceStream.pipe(myOptimizer).pipe(destinationStream);\n```\n\nOptiPng as a web service:\n\n```javascript\nvar OptiPng = require('optipng'),\n    http = require('http');\n\nhttp.createServer(function (req, res) {\n    if (req.headers['content-type'] === 'image/png') {\n        res.writeHead(200, {'Content-Type': 'image/png'});\n        req.pipe(new OptiPng(['-o7'])).pipe(res);\n    } else {\n        res.writeHead(400);\n        res.end('Feed me a PNG!');\n    }\n}).listen(1337);\n```\n\nInstallation\n------------\n\nMake sure you have node.js and npm installed, then run:\n\n    npm install optipng\n\nLicense\n-------\n\n3-clause BSD license -- see the `LICENSE` file for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/papandreou/node-optipng.git"
  },
  "scripts": {
    "coverage": "NODE_ENV=development istanbul cover _mocha -- --reporter dot && echo google-chrome coverage/lcov-report/index.html",
    "lint": "jshint .",
    "test": "mocha && npm run lint",
    "travis": "npm test && npm run coverage && (<coverage/lcov.info coveralls || true)"
  },
  "version": "1.0.0"
}
